{"name":"PhotoSorter","body":"PhotoSorter\r\n- An automated tool to sort out digital photos and videos and transcode (compress) video files\r\n\r\nPhotoSorter is open source and uses GPL license\r\n\r\nCopyright (C) 2005-2012 Jinsong Ren\r\n*********************************************************\r\nProject home page: http://osjren.github.com/PhotoSorter  \r\nReport bugs: https://github.com/osjren/PhotoSorter/issues\r\n*********************************************************\r\n\r\n\r\nWhat is PhotoSorter\r\n===================\r\n- Do you take hundreds or thousands of digital photos and videos a day?  \r\n- Do you have thousands of photo files in one directory or disk and a copy of them in another directory or disk?  \r\n- And some of them are the same but some of them are not because you have either edited them or modified their file names?  \r\n- Or worse, do you have many copies of the original and modified photos scattered everywhere in nested sub-directories on your USB keys, NAS servers, home servers, laptops, desktops, on-line storage space and office computers?  \r\n- And the number of them is so large that it's impossible to sort them out manually or even find them?  \r\n- Do you also have thousands of digital videos taken from you camera that quickly fill up all your disks especially when high-resolution format is common nowadays?  \r\n\r\nIf the answer is yes, then here comes the PhotoSorter to help. Run it in a terminal and answer a few questions such as the source directory and destination directory and everything is sorted out automatically for you.\r\n\r\nA brief history here:  \r\nBack in 2005, I was so fed up with the task of repeatedly sorting out the large amount of digital photos and videos and the usual mess that I wrote a program to free me from this. That was PhotoSorter. \r\n\r\nPhotoSorter doesn't just do simple things like renaming files, it also does some \"smart\" things. I \"invented\" a set of naming conventions for the files and used them in PhotoSorter. Based on these, the file names may have dates, types and annotations and PhotoSorter can synchronise them and resolve conflicts. Over the years PhotoSorter has evolved a lot and now is quite mature. However it does require some installation and configuration to make use of its video transcoding functionality (I will provide the detail when I find time).\r\n\r\n\r\nSupported platforms\r\n===================\r\nLinux or similar with Python 2.4 or above installed. Not tested under Windows or Mac OS.\r\n\r\nPhotoSorter is written in pure Python and in theory should run under any platform with Python installed.\r\n\r\n\r\nInstallation\r\n============\r\nNo installation required. Simply save the files into a directory you like.\r\n\r\n\r\nHow to Run PhotoSorter\r\n======================\r\nIn a terminal, run the following command:  \r\n    python PhotoSorter.py\r\n\r\nYou may need to set the file's executable attribute before running under Linux.\r\n\r\n\r\nHow to Use PhotoSorter\r\n======================\r\nRunning PhotoSorter will present the following menu:\r\n\r\n    Function list:\r\n        0-Auto;\r\n        1-Change the ext of companion .JPG files of .MOV files to .THM;\r\n        2-Add date prefix to filenames;\r\n        3-Add .JPG after .THM;\r\n        4-Transcode video files but skip dated dirs;\r\n        5-Transcode video files in all dirs;\r\n        6-Sync video filename to the orig or old transcoded filename in video dirs;\r\n        7-Bin redundant original & outdated transcoded video files in video dirs;\r\n        8-Sync THM filename to the video filename in video dirs;\r\n        9-Move files to dated directories;\r\n        10-Auto but overwrite existing destination transcoded video files;\r\n        (Seperate multiple functions by comma. Enter \"q\" to quit at any time)\r\n    Which function [0]? \r\n\r\nNormally you only need to choose the Auto mode by type 0 and enter.\r\n\r\nThen you will be asked for the input directory. A list of pre-defined directory shortcuts will be displayed if you have defined them in the user configuration file. \r\nWith the default user configuration file, you will see the following:\r\n\r\n    Pre-defined dir shortcuts:\r\n        0-\"test/input/\"\r\n        1-\"test/\"\r\n    Input dir (0-9 or path)[0]? \r\n\r\nEnter a number to select a directory shortcut or the path to the directory where you want PhotoSorter to find the original photo and video files.\r\n\r\nThe contents of the directory will be listed and you will be asked for confirmation:\r\n\r\n    === Contents of the dir: \r\n        MVI_0730.THM\r\n        MVI_0730.AVI\r\n        P8010006.JPG\r\n    Is the dir \"test/input/\" correct [y]? \r\n\r\nThe same goes for the output directory:\r\n\r\n    Pre-defined dir shortcuts:\r\n        0-\"test/input/\"\r\n        1-\"test/output/\"\r\n        2-\"test/\"\r\n    Output dir (0-9 or path)[0=same as input]? \r\n\r\nAnd similarly you will be asked for confirmation. In the above example entering 1 will lead to this:\r\n\r\n    === Contents of the dir: \r\n    Is the dir \"test/output/\" correct [y]? \r\n\r\nFinally you will be asked if you want to start processing:\r\n\r\n    === Input dir:  test/input/\r\n    === Output dir: test/output/\r\n    Start processing? [y]? \r\n\r\nEnter letter 'y' or just hit the Enter key to start the whole process.  \r\nYou may quit PhotoSorter in the above Question and Answer stage by entering letter \"q\".\r\n\r\nPhotoSorter will display messages on-screen showing what's going on. By default the messages are also saved to a log file in the current directory.\r\nIn this example, you will see something like:\r\n\r\n    === Dir \"test/input/\"\r\n\r\n    --- \"test/input/MVI_0730.THM\"; 0.000KB\r\n    ... Rename to \"20111110-MVI_0730.THM\"\r\n    ... Sync the acc/mod time to the original\r\n    ... Rename to \"20111110-MVI_0730.THM.JPG\"\r\n    ... Sync the acc/mod time to the original\r\n    ... Create new dir \"test/output/20111110/video\"\r\n    ... Move to \"test/output/20111110/video/\"\r\n    ... Sync the acc/mod time to the original\r\n\r\n    --- \"test/input/MVI_0730.AVI\"; 8.111MB\r\n    ... Rename to \"20080121-MVI_0730.AVI\"\r\n    ... Sync the acc/mod time to the original\r\n    ... Converting .AVI to .MKV ...\r\n    ... Sync the acc/mod time to the original\r\n    ... Converted to \"20080121-MVI_0730.H24.MKV\".\r\n    ... Transcoded file: \"20080121-MVI_0730.H24.MKV\"\r\n    ... Create new dir \"test/output/20080121/video\"\r\n    ... Move to \"test/output/20080121/video/\"\r\n    ... Sync the acc/mod time to the original\r\n    ... Redundant original file: \"20080121-MVI_0730.AVI\"\r\n    ... Create new dir \"test/input/#videobin\"\r\n    ... Move to \"test/input/#videobin/\"\r\n    ... Sync the acc/mod time to the original\r\n\r\n    --- \"test/input/P8010006.JPG\"; 1.114MB\r\n    ... Rename to \"20060801-P8010006.JPG\"\r\n    ... Sync the acc/mod time to the original\r\n    ... Create new dir \"test/output/20060801\"\r\n    ... Move to \"test/output/20060801/\"\r\n    ... Sync the acc/mod time to the original\r\n\r\n    === 3 files processed in total.\r\n    ------------------------------------------------\r\n    === FnAddDatePrefix:\r\n    === 3 files added with date-prefix.\r\n    ------------------------------------------------\r\n    === FnAddJpgSuffix:\r\n    === 1 THM files added with JPG suffix.\r\n    ------------------------------------------------\r\n    === FnEncodeVideo:\r\n    === 1 video files transcoded.\r\n    === 0 existing target files skipped.\r\n    ------------------------------------------------\r\n    === FnMoveToDatedDir:\r\n    === 3 files moved to dated dirs.\r\n    === 0 existing target files skipped.\r\n    === 1 redundant video files binned.\r\n    === 0 errors.\r\n    ================================================\r\n\r\n\r\n    === Photo Sorter v2.5.6a (C) J Ren 2005-2012\r\n    === [000-00:00:04] 2012-04-27 12:13:34 AM\r\n    === End.\r\n\r\n    === Messages logged to \"PhotoSorter-log.txt\"\r\n\r\n\r\nUser Configuration\r\n==================\r\nPhotoSorter reads a user configuration script file if it's found under the current directory so that different users may have their own individual configuration files, or a user can have different configurations for different purposes. The default name of the configuration script file is PhotoSorter-config.py. An example file has been provided. You don't have to use it. But if you do, you may want to customize it.\r\n\r\nBy default, PhotoSort writes the screen messages to a log file named photosorter-log.txt each time it runs. So the existing log file will be overwritten if you run PhotoSorter again. The logging can be disabled in the configuration file.\r\n\r\nIf you don't have ffmpeg installed or it does not support H.264 encoding, you may disable video transcoding using the 'EnableVideoTranscoding' setting in the configuration file. However, this is not strictly required because PhotoSorter detects ffmpeg automatically and warns you if video transcoding is not supported.\r\n\r\n\r\nPhotoSorter Terminology and Conventions\r\n=======================================\r\n(to be documented)  \r\n- date prefix\r\n- companion file\r\n- dated directory\r\n- extension name\r\n- video directory\r\n- special directory\r\n- annotation\r\n\r\n\r\nVideo Transcoding (Compression)\r\n===============================\r\nIf you have video files in the input directory, PhotoSorter will only transcode (compress) them when the video encoding program is configured correctly. PhotoSorter uses a custom-built ffmpeg version with H.264 support enabled as the encoder and transcodes video files into MKV format using H.264 compression in CRF quality mode. The output video file size is about 1/4 - 1/8 of the original with no noticeable quality degradation. \r\n\r\nOne of the reasons to use H.264 video compression instead of MPEG4 in ffmpeg is it's an advanced and popular industrial standard and is widely supported. The other reason is practical: I found only it supports a certain colour space in order to keep the colour quality of the transcoded image the same as that of the original from some camera makers.\r\n\r\nMKV's full name is Matroska Multimedia Container. It is an open standard free container format for common multimedia content and also widely supported by open source software and even hardware players. \r\n\r\nUnfortunately the ffmpeg output messages have different formats for different versions and PhotoSorter may not work well with some ffmpeg versions.\r\n\r\nIf transcoding is successful, PhotoSorter will move the original video file into a special directory named #videobin. Otherwise the original video file will stay where it is. PhotoSorter NEVER deletes the original files.\r\n\r\n\r\nCompiling and Installing ffmpeg\r\n===============================\r\nHere is a short instruction on how to compile and install ffmpeg with H.264 support under Ubuntu. For more information, please see ffmpeg web site (http://ffmpeg.org/).\r\n\r\nInstall the Dependencies:  \r\n(1) Uninstall x264, libx264-dev, and ffmpeg if they are already installed. Open a terminal and run the following:\r\n\r\n    sudo apt-get remove ffmpeg x264 libx264-dev\r\n\r\n(2) Get all of the packages you will need to install FFmpeg and x264 (you may need to enable the universe and multiverse repositories):\r\n\r\n    sudo apt-get update\r\n    sudo apt-get install build-essential git-core checkinstall yasm texi2html libfaac-dev \\\r\n        libopencore-amrnb-dev libopencore-amrwb-dev libsdl1.2-dev libtheora-dev \\\r\n        libvorbis-dev libx11-dev libxfixes-dev libxvidcore-dev zlib1g-dev\r\n\r\nInstall x264:  \r\n(3) Get the current source files, compile, and install:\r\n\r\n    cd\r\n    git clone git://git.videolan.org/x264\r\n    cd x264\r\n    ./configure --enable-static\r\n    make\r\n    sudo checkinstall --pkgname=x264 --default --pkgversion=\"3:$(./version.sh | \\\r\n        awk -F'[\" ]' '/POINT/{print $4\"+git\"$5}')\" --backup=no --deldoc=yes\r\n\r\nInstall FFmpeg:  \r\n(4) Get the most current source files, compile, and install:\r\n\r\n    cd\r\n    git clone git://git.videolan.org/ffmpeg\r\n    cd ffmpeg\r\n    ./configure --enable-gpl --enable-version3 --enable-nonfree --enable-postproc \\\r\n        --enable-libfaac --enable-libopencore-amrnb --enable-libopencore-amrwb \\\r\n        --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libxvid \\\r\n        --enable-x11grab  \\\r\n        --enable-avfilter --enable-vdpau --enable-bzlib \\\r\n        --enable-pthreads --enable-zlib --disable-stripping \\\r\n        --enable-runtime-cpudetect --enable-swscale --enable-parser=pcm_u8 \r\n    make\r\n    sudo checkinstall --pkgname=ffmpeg --pkgversion=\"5:$(./version.sh)\" --backup=no \\\r\n        --deldoc=yes --default\r\n    hash x264 ffmpeg ffplay ffprobe\r\n\r\nNow ffmpeg is installed to: /usr/local/bin/ffmpeg\r\n\r\n\r\nSupported File Formats\r\n======================\r\n(to be documented)\r\n\r\n\r\nToDo\r\n====\r\n- Documentation\r\n- Full test suite\r\n- A few new features I'd like to add\r\n\r\n\r\nVersion History\r\n===============\r\n2005.05.31 - Created by Jinsong Ren.  \r\n2005.06.17 - v1.1.0 Added fully auto mode.  \r\n2005.07.12 - v1.4.0  \r\n2007.10.21 - v1.7.0  \r\n2008.01.04 - v1.8.0  \r\n2011.06.25 - v2.0.0  \r\n2012.04.12 - v2.5.4. Added license terms. Updated EXIF.py to v1.09  \r\n2012.04.22 - v2.5.5  \r\n2012.04.26 - v2.5.6a  \r\n\r\nREADME.txt History\r\n==================\r\n2012.04.12 - Created by Jinsong Ren  \r\n2012.04.19 - Updated the documentation and license  \r\n2012.04.22 - Updated the documentation about v2.5.5  \r\n2012.04.26 - Added the details of the user interaction at running\r\n             Added the compiling instruction for ffmpeg and x264\r\n\r\n\r\n","tagline":"An automated tool to sort out digital photos and videos and transcode/compress videos. Written in Python","google":"UA-31069627-1","note":"Don't delete this file! It's used internally to help with page regeneration."}